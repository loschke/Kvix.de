---
import "../style/global.css";
import Navigation from "../components/navigation/Navigation.astro";
import Footer from "../components/navigation/Footer.astro";
import { ClientRouter } from "astro:transitions";

interface ArticleMetadata {
	publishedTime: string;
	modifiedTime?: string;
	authors: string[];
	tags?: string[];
}

interface Props {
	title?: string;
	description?: string;
	ogImage?: string;
	canonicalURL?: string;
	article?: ArticleMetadata;
}

const {
	title = "Rico Loschke - KI Experte",
	description = "Ganzheitliches Wissen zu generativer KI und deren Anwendung in der Praxis",
	ogImage,
	canonicalURL,
	article,
} = Astro.props;

// Check if we're on the homepage
const isHomepage = Astro.url.pathname === "/";

// Prepare canonical URL
const finalCanonicalURL =
	canonicalURL ||
	new URL(Astro.url.pathname, Astro.site || "https://kvix.de").toString();

// Navigation items in order (used to determine direction)
const NAV_ITEMS = ["/about", "/projekte", "/blog", "/playground", "/guides"];
const currentPath = Astro.url.pathname;
const currentIndex = NAV_ITEMS.findIndex((path) =>
	currentPath.startsWith(path),
);
---

<!doctype html>
<html lang="de" class="dark">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="description" content={description} />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link
			rel="preload"
			href="/fonts/FFClanProRegular.woff2"
			as="font"
			type="font/woff2"
			crossorigin
		/>
		<link rel="stylesheet" href="/fonts/fonts.css" />
		<link rel="canonical" href={finalCanonicalURL} />
		<ClientRouter />

		{/* Open Graph */}
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:type" content={article ? "article" : "website"} />
		<meta property="og:url" content={finalCanonicalURL} />
		<meta property="og:site_name" content="Rico Loschke" />
		{ogImage && <meta property="og:image" content={ogImage} />}

		{/* Twitter Card */}
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		{ogImage && <meta name="twitter:image" content={ogImage} />}

		{/* Article Metadata */}
		{
			article && (
				<>
					<meta
						property="article:published_time"
						content={article.publishedTime}
					/>
					{article.modifiedTime && (
						<meta
							property="article:modified_time"
							content={article.modifiedTime}
						/>
					)}
					{article.authors?.map((author) => (
						<meta property="article:author" content={author} />
					))}
					{article.tags?.map((tag) => (
						<meta property="article:tag" content={tag} />
					))}
				</>
			)
		}

		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>

		<style is:global>
			::view-transition-old(root),
			::view-transition-new(root) {
				animation: none;
				mix-blend-mode: normal;
			}

			::view-transition-old(page) {
				animation: var(--page-transition-out, fade-scale-out) 0.5s
					cubic-bezier(0.76, 0, 0.24, 1);
			}

			::view-transition-new(page) {
				animation: var(--page-transition-in, fade-scale-in) 0.5s
					cubic-bezier(0.76, 0, 0.24, 1);
			}

			@keyframes fade-scale-out {
				to {
					opacity: 0;
					transform: scale(0.95) translateY(10px);
				}
			}

			@keyframes fade-scale-in {
				from {
					opacity: 0;
					transform: scale(1.05) translateY(-10px);
				}
			}

			@keyframes fade-scale-out-reverse {
				to {
					opacity: 0;
					transform: scale(1.05) translateY(-10px);
				}
			}

			@keyframes fade-scale-in-reverse {
				from {
					opacity: 0;
					transform: scale(0.95) translateY(10px);
				}
			}
		</style>
	</head>
	<body class="bg-base text-white/90 min-h-screen flex flex-col">
		<Navigation />
		<main
			class={`flex-grow ${isHomepage ? "" : "pt-32"}`}
			style="view-transition-name: page;"
			data-nav-index={currentIndex}
		>
			<slot />
		</main>
		<Footer />
	</body>
</html>

<script>
	document.addEventListener("astro:before-preparation", (event) => {
		const NAV_ITEMS = [
			"/about",
			"/projekte",
			"/blog",
			"/playground",
			"/guides",
		];
		const fromPath = new URL(event.from).pathname;
		const toPath = new URL(event.to).pathname;

		const fromIndex = NAV_ITEMS.findIndex((path) =>
			fromPath.startsWith(path),
		);
		const toIndex = NAV_ITEMS.findIndex((path) => toPath.startsWith(path));

		if (fromIndex === -1 || toIndex === -1) return;

		// Set animation direction based on navigation direction
		if (toIndex > fromIndex) {
			document.documentElement.style.setProperty(
				"--page-transition-out",
				"fade-scale-out",
			);
			document.documentElement.style.setProperty(
				"--page-transition-in",
				"fade-scale-in",
			);
		} else {
			document.documentElement.style.setProperty(
				"--page-transition-out",
				"fade-scale-out-reverse",
			);
			document.documentElement.style.setProperty(
				"--page-transition-in",
				"fade-scale-in-reverse",
			);
		}
	});

	document.addEventListener("astro:after-swap", () => {
		// Reset animation properties
		document.documentElement.style.removeProperty("--page-transition-out");
		document.documentElement.style.removeProperty("--page-transition-in");
	});
</script>

<style>
	/* Ensure subpage content starts below navigation */
	main:not(:empty) {
		position: relative;
		z-index: 1;
	}

	/* Add perspective for 3D effect */
	body {
		perspective: 1000px;
		transform-style: preserve-3d;
		overflow-x: hidden;
	}

	main {
		transform-origin: center;
		backface-visibility: hidden;
	}
</style>
